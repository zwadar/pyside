/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of PySide2.
**
** $QT_BEGIN_LICENSE:LGPL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 3 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL3 included in the
** packaging of this file. Please review the following information to
** ensure the GNU Lesser General Public License version 3 requirements
** will be met: https://www.gnu.org/licenses/lgpl-3.0.html.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 2.0 or (at your option) the GNU General
** Public license version 3 or any later version approved by the KDE Free
** Qt Foundation. The licenses are as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3
** included in the packaging of this file. Please review the following
** information to ensure the GNU General Public License requirements will
** be met: https://www.gnu.org/licenses/gpl-2.0.html and
** https://www.gnu.org/licenses/gpl-3.0.html.
**
** $QT_END_LICENSE$
**
****************************************************************************/

#include <QtCore/qnamespace.h>

#if @ENABLE_X11@
  #define Q_OS_X11
#elif @ENABLE_MAC@
  #define Q_OS_MAC
#elif @ENABLE_WIN@
  #define Q_OS_WIN
#endif

// There are symbols in Qt that exist in Debug but
// not in release
#define QT_NO_DEBUG

// Make "signals:", "slots:" visible as access specifiers
#define QT_ANNOTATE_ACCESS_SPECIFIER(a) __attribute__((annotate(#a)))

#include <QtCore/QtCore>
#include <QtConcurrent/QtConcurrent>
#include <QtGui/QtGui>
#include <QtWidgets/QtWidgets>
#include <QtOpenGL/QtOpenGL>
#include "qpytextobject.h"  // PySide class
#if @ENABLE_X11@
#if @Qt5X11Extras_FOUND@
#include <QtX11Extras/QX11Info>
#endif
#endif
#include <QtXml/QtXml>
#include <QtXmlPatterns/QtXmlPatterns>
#include <QtUiTools/QtUiTools>
#include <QtNetwork/QtNetwork>
#include <QtMultimedia/QtMultimedia>
#include <QtPrintSupport/QtPrintSupport>

// QT_WIDGETS_LIB must be defined to QSqlRelationalDelegate become visible.
// It also changes code generation in pysideqtesttouch.h
#define QT_WIDGETS_LIB
#include <QtSql/QtSql>
#include <QtSvg/QtSvg>
#if @Qt5WebKit_FOUND@
#  include <QtWebKit/QtWebKit>
#endif

#if @Qt5WebKitWidgets_FOUND@
#  include <QtWebKitWidgets/QtWebKitWidgets>
#endif

#if @Qt5Test_FOUND@
#  include <QtTest/qtest_gui.h>
#  include "pysideqtesttouch.h"
#endif

#if @Qt5Quick_FOUND@
#  include <QtQuick/QtQuick>
#endif

#if @Qt5Qml_FOUND@
#  include <QtQml/QtQml>
#endif

#if @Qt5QuickWidgets_FOUND@
#  include <QtQuickWidgets/QtQuickWidgets>
#endif

#if @Qt5WebEngineWidgets_FOUND@
#  include <QtWebEngineWidgets/QtWebEngineWidgets>
#endif

#if @Qt5WebChannel_FOUND@
#  include <QtWebChannel/QtWebChannel>
#endif

#if @Qt5WebSockets_FOUND@
#  include <QtWebSockets/QtWebSockets>
#endif

#if @Qt5Script_FOUND@
#  include <QtScript/QtScript>
#endif

#if @Qt5ScriptTools_FOUND@
#  include <QtScriptTools/QtScriptTools>
#endif

//QtHelp needs to be included after QtSql. Why?
#include <QtHelp/QtHelp>

#ifndef QT_NO_OPENGL
#include <@GL_H@>
#include <QtOpenGL/QtOpenGL>
#endif // QT_NO_OPENGL
